$wm-blue: #006699;
$wm-red: #990000;
$wm-green: #339966;
$primary: $wm-blue;
// $font-size-base: 0.875rem;
$font-family-sans-serif: 'Lato', sans-serif;

@import '~bootstrap/scss/_functions';
@import "~bootstrap/scss/_variables";

$grid-breakpoints: map-merge($grid-breakpoints, (
	xxl: 2000px
));

$container-max-widths: map-merge($container-max-widths, (
	xxl: 1960px
));

@import "~bootstrap/scss/bootstrap";

$timeline-width: 0.25em;
$timeline-bg: (
	left: #5AAAFA,
	right: #6EEDD8,
);
$timeline-text: $black;
$timeline-text-comment: $gray-700;

html {
	height: 100%;
}

body {
	min-width: 100%;
	min-height: 100%;
	overflow-x: hidden;
}

.error {
	min-height: 100%;
	min-height: 100vh;
}

.alert-danger {
	word-break: break-all;
}

.material-icons{
	&.md-18 { font-size: 18px; }
	&.md-24 { font-size: 24px; }
	&.md-36 { font-size: 36px; }
	&.md-48 { font-size: 48px; }
}

.DateRangePicker{
	@extend .d-block;
}

.DateRangePickerInput {
	@extend .rounded;
	@extend .d-flex;
	@extend .justify-content-between;
	@extend .align-items-center;
}

.DateInput {
	width: inherit;
}

.DateInput_input {
	padding: 0 12px;
	font-size: $font-size-base;
	font-weight: $font-weight-light;
	line-height: $line-height-base;
}

.DateRangePickerInput_clearDate {
	@extend .align-self-center;
}

.select-users .Select-multi-value-wrapper {
	.Select-value {
		color: $timeline-text;
		.Select-value-icon:hover {
			color: $timeline-text;
		}
	}
	// First in the list
	> .Select-value {
		border-color: darken(map-get($timeline-bg, "left"), 10%);
		background-color: map-get($timeline-bg, "left");
		.Select-value-icon {
			border-color: darken(map-get($timeline-bg, "left"), 10%);
			&:hover {
				border-color: darken(map-get($timeline-bg, "left"), 10%);
				background-color: lighten(map-get($timeline-bg, "left"), 10%);
			}
		}
		// All others in the list (will be restriected to 2).
		& ~ .Select-value {
			border-color: darken(map-get($timeline-bg, "right"), 10%);
			background-color: map-get($timeline-bg, "right");
			.Select-value-icon {
				border-color: darken(map-get($timeline-bg, "right"), 10%);
				&:hover {
					border-color: darken(map-get($timeline-bg, "right"), 10%);
					background-color: lighten(map-get($timeline-bg, "right"), 10%);
				}
			}
		}
	}
}

.timeline .user {
	background-color: $gray-300;
	text-decoration: none;
	color: $body-color;
	&:hover {
		text-decoration: none;
		background-color: $gray-200;
	}
	&.left {
		background-color: map-get($timeline-bg, "left");
		color: $timeline-text;
		&:hover {
			background-color: lighten(map-get($timeline-bg, "left"), 5%);
		}
	}
	&.right {
		background-color: map-get($timeline-bg, "right");
		color: $timeline-text;
		&:hover {
			background-color: lighten(map-get($timeline-bg, "right"), 5%);
		}
	}
	&.error {
		min-height: inherit;
		background-color: theme-color("danger");
		color: $white;
		&:hover {
			background-color: lighten(theme-color("danger"), 5%);
		}
	}
}

.revision {

	.wrapper:before {
		@extend .align-self-center;
	}

	a {
		text-decoration: none;
		color: $body-color;
		&:hover {
			text-decoration: none;
			background-color: $gray-300;
		}
	}

	.content {
		word-wrap: break-word;
		color: $timeline-text;
		.comment {
			color: $timeline-text-comment;
		}
	}

	&.left {
		.wrapper,
		.record {
			@extend .flex-row-reverse;
		}
		.content {
			background-color: map-get($timeline-bg, "left");
			&:hover {
				background-color: lighten(map-get($timeline-bg, "left"), 5%);
			}
		}
	}

	&.right {
		.content {
			background-color: map-get($timeline-bg, "right");
			&:hover {
				background-color: lighten(map-get($timeline-bg, "right"), 5%);
			}
		}
		.timestamp,
		.timelapse {
			@extend .text-right;
		}
	}

	@media screen and (min-width: map-get($grid-breakpoints, "md")) {
		.wrapper {
			border-style: solid;
			border-color: $border-color;
			border-width: 0;
			&:before {
				content: '';
				display: block;
				width: 1.5em;
				height: 1.5em;
				-moz-border-radius: 0.75em;
				-webkit-border-radius: 0.75em;
				border-radius: 0.75em;
			}
		}
	}

	&.right .wrapper {
		border-left-width: $timeline-width;
		margin-right: -($timeline-width / 2) - 1;
		margin-left:  -($timeline-width / 2);
		&:before {
			background-color: map-get($timeline-bg, "right");
			margin-left: ($timeline-width / 2) - 1;
		}
	}

	&.left .wrapper {
		border-right-width: $timeline-width;
		margin-right: -($timeline-width / 2);
		margin-left: -($timeline-width / 2) - 1;
		&:before {
			background-color: map-get($timeline-bg, "left");
			margin-right: ($timeline-width / 2) - 1;
		}
	}
}

.timelapse {
	color: #dc3545;
}

.diff {
	&.left {
		border-color: map-get($timeline-bg, "left") !important;
	}
	&.right {
		border-color: map-get($timeline-bg, "right") !important;
	}
	&.wrapper {
		margin-left: -($timeline-width / 2) - 1;
		margin-right: -($timeline-width / 2) - 1;
	}

	.content {
		max-height: 500px;
		overflow-y: scroll;
	}
	.table {
		margin-bottom: 0;
	}
	.table th,
	.table td {
		border: none;
	}
	.diff-empty {
		width: 50%;
	}
	.diff-content,
	.diff-context,
	.diff-addedline,
	.diff-deletedline {
		width: 48%;
	}
	.diff-marker {
		width: 2%;
	}
	.diff-lineno {
		@extend .col-6;
		font-weight: $font-weight-bold;
	}
	.diff-context,
	.diff-deletedline,
	.diff-addedline {
		@extend .rounded;
		@extend .border;
		border-left-width: 4px !important;
	}
	.diff-deletedline {
		border-color: #ffe49c !important;
	}
	.diff-addedline {
		border-color: #a3d3ff !important;
	}
}

.sk-three-bounce {
	margin: 0;
}
